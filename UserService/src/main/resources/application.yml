server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: emad
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
#  config:
#    import: optional:configserver:http://localhost:8086
#  profiles:
#    active: prod

#implementing security for user service (part 1)
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-27478692.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa9jcf1n8J4C9tkH5d7
            client-secret: 4Rw5Nr-4IxUnsIY8ZkQg3FcdsRWvxxsUvPbmR1PW

        provider:
          okta:
            issuer-uri: https://dev-27478692.okta.com/oauth2/default



  application:
    name: USER-MICROSERVICE


eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-wth-eureka: true
    service-url:
      defaulZone: http://localhost:8761/eureka

#Spring Actutator properties
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always


#Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
#Resilience4j retry
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

#Resilience4j rate limiter
  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeOutDuration: 2s

#okta configuration for security (part 2)
okta:
  oauth2:
    issuer: https://dev-27478692.okta.com/oauth2/default
    audience: api://default